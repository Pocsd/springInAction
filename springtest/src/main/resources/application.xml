<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="cn.com.springtest"/>

    <aop:aspectj-autoproxy/>

    <!--<bean id="userServiceProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames" value="*Serviceimpl"/>

        <property name="interceptorNames">
            <list>
                <value>logCreateAdviser</value>
                <value>logResultAdvice</value>
            </list>
        </property>
    </bean>-->
<!--

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
-->


    <!--通过方法的名字进行拦截-->

    <!--<bean id="logCreateAdviser" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="logArgsAdvice"/>
        <property name="mappedNames" value="#{env['matchName']}"/>
    </bean>-->

   <!-- <bean id="adviceDemo" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logArgsAdvice"/>
        <property name="patterns" value="cn.com.springtest.*.service.*"/>
    </bean>-->

   <!-- <bean id="adviceDemo2" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logResultAdvice"/>
        <property name="pattern" value="cn.com.springtest.*.service.*"/>
    </bean>-->

    <!--For AllInfinance frame-->
   <!-- <bean id="env" class="cn.com.springtest.config.PropertiesDemoSupport">
        <property name="location" value="classpath:dev/test.properties"/>
    </bean>-->

  <!--  <bean class="cn.com.springtest.task.DemoTask" id="demoTask">
        <property name="flagContext" ref="flagContext"/>
    </bean>
    <bean class="cn.com.springtest.task.FlagContext" id="flagContext"/>-->
   <!-- <bean class="cn.com.springtest.task.LoopQuery" id="loopQuery" init-method="init">
        <property name="flagContext" ref="flagContext"/>
    </bean>-->
    
   <!-- <task:executor id="asynExecutor" pool-size="10" />
    <task:scheduled-tasks>
        <task:scheduled ref="demoTask" method="run" cron="0/1 * * * * *"/>
    </task:scheduled-tasks>-->

    <!--<bean class="cn.com.springtest.task.DemoPtest" id="demoPtest" p:lists="ss" scope="session">
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>-->



</beans>